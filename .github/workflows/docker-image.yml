name: kafka-datagen

on:
  push:
    tags: [ 'v*.*.*' ]
  pull_request: []

jobs:
  docker_build_and_push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}
    - name: Build And Push
      env:
        NAME: spitharepo
        REPO: kafka-datagen 
      run: |
        VERSION=`cat ./VERSION`
        SVERSION=`echo $VERSION | cut -d'.' -f1-2`
        MVERSION=`echo $VERSION | cut -d'.' -f1`
        make -C docker docker
        docker tag $REPO:latest $NAME/$REPO:latest
        docker tag $REPO:latest $NAME/$REPO:$VERSION
        docker tag $REPO:latest $NAME/$REPO:$SVERSION
        docker tag $REPO:latest $NAME/$REPO:$MVERSION
        docker push $NAME/$REPO:$VERSION
        docker push $NAME/$REPO:$SVERSION
        docker push $NAME/$REPO:$MVERSION
        docker push $NAME/$REPO:latest
        
  release_build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Read VERSION file
        id: version
        run: echo "::set-output name=VERSION::$(cat VERSION)"

      - name: Make binary file
        run: |
          make build
      - name: Compress datagen and example directory
        run: |
          tar -czvf datagen-${{ steps.version.outputs.VERSION }}.linux-amd64.tar.gz datagen example
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Assets to Release
        id: upload_release_asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./datagen-${{ steps.version.outputs.VERSION }}.linux-amd64.tar.gz
          asset_name: datagen-${{ steps.version.outputs.VERSION }}.linux-amd64.tar.gz
          asset_content_type: application/gzip
